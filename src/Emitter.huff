 /** 
 *  EMITTER HUFF EXERCISE
 *  
 *  The task is to enable this contract, when the function `value(uint256, uint256)` is called, should
 *  emit an event named `Value(uint256 indexed, uint256)`
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

#define function value(uint256, uint256) payable returns()

#define event Value(uint256 indexed, uint256)


#define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload
    0xE0 shr
    __FUNC_SIG(value)
    eq
    value_def jumpi
    0x00 0x00 revert

    value_def:
        0x04 calldataload                    // [v0]
        0x24 calldataload                    // [v1, v0]
        0x00 mstore                          // [v0]
        __EVENT_HASH(Value) 0x20 0x00 log2   // []
}
